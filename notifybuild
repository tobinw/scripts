#!/bin/bash

# Watch over project files, and automatically rebuild
# project when files are modified. Can easily be
# customized for different project types/languages.
#
# Use: ./autobuild.sh [source_dirs] [library_files] [build_command] [project_name]
#
# e.g.  ./autobuild.sh bin/main
#

# which types of files to monitor for modification
command='find $1
 -name "[!\.]*.cpp" -or
 -name "[!\.]*.h" -or
 -name "[!\.]*.cc" -or
 -name "[!\.]*.cxx"'

compileCommand=$3
lgreen='\033[01;32m'
red='\033[00;31m'
restore='\033[0m'

# ----------------------------------------

clear
echo "Waiting for changes to ${4}."

while [[ true ]]
do
    # files list is updated here so that newly added files will be auto-detected
    files=`eval $command`
    files="${files} ${2}"
    inotifywait -qq -e modify -e attrib $files

    # Recompile
    clear
    $compileCommand
    compiled=$?

    DT=`date +"%D %H:%M"`

    # Report build ok, or failure (clear if former)
    if [[ $compiled -eq 0 ]]
    then
        clear
        echo -e "[${lgreen} $4 Build OK $DT ${restore}]"
    else
        echo -e "[${red} $4 Build Failed $DT ${restore}]"
    fi
done
